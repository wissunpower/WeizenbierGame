// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lobby.proto

#include "lobby.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace wzbgame {
namespace message {
namespace lobby {
constexpr CharacterCreateRequest::CharacterCreateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : character_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CharacterCreateRequestDefaultTypeInternal {
  constexpr CharacterCreateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CharacterCreateRequestDefaultTypeInternal() {}
  union {
    CharacterCreateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CharacterCreateRequestDefaultTypeInternal _CharacterCreateRequest_default_instance_;
constexpr CharacterCreateResponse::CharacterCreateResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0){}
struct CharacterCreateResponseDefaultTypeInternal {
  constexpr CharacterCreateResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CharacterCreateResponseDefaultTypeInternal() {}
  union {
    CharacterCreateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CharacterCreateResponseDefaultTypeInternal _CharacterCreateResponse_default_instance_;
constexpr CharacterDeleteRequest::CharacterDeleteRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : character_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CharacterDeleteRequestDefaultTypeInternal {
  constexpr CharacterDeleteRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CharacterDeleteRequestDefaultTypeInternal() {}
  union {
    CharacterDeleteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CharacterDeleteRequestDefaultTypeInternal _CharacterDeleteRequest_default_instance_;
constexpr CharacterDeleteResponse::CharacterDeleteResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0){}
struct CharacterDeleteResponseDefaultTypeInternal {
  constexpr CharacterDeleteResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CharacterDeleteResponseDefaultTypeInternal() {}
  union {
    CharacterDeleteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CharacterDeleteResponseDefaultTypeInternal _CharacterDeleteResponse_default_instance_;
constexpr CharacterSelectRequest::CharacterSelectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : character_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CharacterSelectRequestDefaultTypeInternal {
  constexpr CharacterSelectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CharacterSelectRequestDefaultTypeInternal() {}
  union {
    CharacterSelectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CharacterSelectRequestDefaultTypeInternal _CharacterSelectRequest_default_instance_;
constexpr CharacterSelectResponse::CharacterSelectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0){}
struct CharacterSelectResponseDefaultTypeInternal {
  constexpr CharacterSelectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CharacterSelectResponseDefaultTypeInternal() {}
  union {
    CharacterSelectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CharacterSelectResponseDefaultTypeInternal _CharacterSelectResponse_default_instance_;
}  // namespace lobby
}  // namespace message
}  // namespace wzbgame
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_lobby_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_lobby_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_lobby_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_lobby_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterCreateRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterCreateRequest, character_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterCreateResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterCreateResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterDeleteRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterDeleteRequest, character_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterDeleteResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterDeleteResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterSelectRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterSelectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterSelectRequest, character_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterSelectResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterSelectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::wzbgame::message::lobby::CharacterSelectResponse, result_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::wzbgame::message::lobby::CharacterCreateRequest)},
  { 7, 13, sizeof(::wzbgame::message::lobby::CharacterCreateResponse)},
  { 14, 20, sizeof(::wzbgame::message::lobby::CharacterDeleteRequest)},
  { 21, 27, sizeof(::wzbgame::message::lobby::CharacterDeleteResponse)},
  { 28, 34, sizeof(::wzbgame::message::lobby::CharacterSelectRequest)},
  { 35, 41, sizeof(::wzbgame::message::lobby::CharacterSelectResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wzbgame::message::lobby::_CharacterCreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wzbgame::message::lobby::_CharacterCreateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wzbgame::message::lobby::_CharacterDeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wzbgame::message::lobby::_CharacterDeleteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wzbgame::message::lobby::_CharacterSelectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::wzbgame::message::lobby::_CharacterSelectResponse_default_instance_),
};

const char descriptor_table_protodef_lobby_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013lobby.proto\022\025wzbgame.message.lobby\"D\n\026"
  "CharacterCreateRequest\022\031\n\014character_id\030\001"
  " \001(\014H\000\210\001\001B\017\n\r_character_id\"9\n\027CharacterC"
  "reateResponse\022\023\n\006Result\030\001 \001(\005H\000\210\001\001B\t\n\007_R"
  "esult\"D\n\026CharacterDeleteRequest\022\031\n\014chara"
  "cter_id\030\001 \001(\014H\000\210\001\001B\017\n\r_character_id\"9\n\027C"
  "haracterDeleteResponse\022\023\n\006Result\030\001 \001(\005H\000"
  "\210\001\001B\t\n\007_Result\"D\n\026CharacterSelectRequest"
  "\022\031\n\014character_id\030\001 \001(\014H\000\210\001\001B\017\n\r_characte"
  "r_id\"9\n\027CharacterSelectResponse\022\023\n\006Resul"
  "t\030\001 \001(\005H\000\210\001\001B\t\n\007_Resultb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_lobby_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lobby_2eproto = {
  false, false, 431, descriptor_table_protodef_lobby_2eproto, "lobby.proto", 
  &descriptor_table_lobby_2eproto_once, nullptr, 0, 6,
  schemas, file_default_instances, TableStruct_lobby_2eproto::offsets,
  file_level_metadata_lobby_2eproto, file_level_enum_descriptors_lobby_2eproto, file_level_service_descriptors_lobby_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_lobby_2eproto_getter() {
  return &descriptor_table_lobby_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_lobby_2eproto(&descriptor_table_lobby_2eproto);
namespace wzbgame {
namespace message {
namespace lobby {

// ===================================================================

class CharacterCreateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CharacterCreateRequest>()._has_bits_);
  static void set_has_character_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CharacterCreateRequest::CharacterCreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wzbgame.message.lobby.CharacterCreateRequest)
}
CharacterCreateRequest::CharacterCreateRequest(const CharacterCreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_character_id()) {
    character_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:wzbgame.message.lobby.CharacterCreateRequest)
}

inline void CharacterCreateRequest::SharedCtor() {
character_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CharacterCreateRequest::~CharacterCreateRequest() {
  // @@protoc_insertion_point(destructor:wzbgame.message.lobby.CharacterCreateRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CharacterCreateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  character_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CharacterCreateRequest::ArenaDtor(void* object) {
  CharacterCreateRequest* _this = reinterpret_cast< CharacterCreateRequest* >(object);
  (void)_this;
}
void CharacterCreateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CharacterCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:wzbgame.message.lobby.CharacterCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    character_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterCreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterCreateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wzbgame.message.lobby.CharacterCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional bytes character_id = 1;
  if (_internal_has_character_id()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_character_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wzbgame.message.lobby.CharacterCreateRequest)
  return target;
}

size_t CharacterCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wzbgame.message.lobby.CharacterCreateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes character_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_character_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterCreateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CharacterCreateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterCreateRequest::GetClassData() const { return &_class_data_; }

void CharacterCreateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CharacterCreateRequest *>(to)->MergeFrom(
      static_cast<const CharacterCreateRequest &>(from));
}


void CharacterCreateRequest::MergeFrom(const CharacterCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wzbgame.message.lobby.CharacterCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_character_id()) {
    _internal_set_character_id(from._internal_character_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterCreateRequest::CopyFrom(const CharacterCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wzbgame.message.lobby.CharacterCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterCreateRequest::IsInitialized() const {
  return true;
}

void CharacterCreateRequest::InternalSwap(CharacterCreateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &character_id_, GetArenaForAllocation(),
      &other->character_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterCreateRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_lobby_2eproto_getter, &descriptor_table_lobby_2eproto_once,
      file_level_metadata_lobby_2eproto[0]);
}

// ===================================================================

class CharacterCreateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CharacterCreateResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CharacterCreateResponse::CharacterCreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wzbgame.message.lobby.CharacterCreateResponse)
}
CharacterCreateResponse::CharacterCreateResponse(const CharacterCreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:wzbgame.message.lobby.CharacterCreateResponse)
}

inline void CharacterCreateResponse::SharedCtor() {
result_ = 0;
}

CharacterCreateResponse::~CharacterCreateResponse() {
  // @@protoc_insertion_point(destructor:wzbgame.message.lobby.CharacterCreateResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CharacterCreateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CharacterCreateResponse::ArenaDtor(void* object) {
  CharacterCreateResponse* _this = reinterpret_cast< CharacterCreateResponse* >(object);
  (void)_this;
}
void CharacterCreateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CharacterCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:wzbgame.message.lobby.CharacterCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterCreateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterCreateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wzbgame.message.lobby.CharacterCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 Result = 1;
  if (_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wzbgame.message.lobby.CharacterCreateResponse)
  return target;
}

size_t CharacterCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wzbgame.message.lobby.CharacterCreateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 Result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterCreateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CharacterCreateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterCreateResponse::GetClassData() const { return &_class_data_; }

void CharacterCreateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CharacterCreateResponse *>(to)->MergeFrom(
      static_cast<const CharacterCreateResponse &>(from));
}


void CharacterCreateResponse::MergeFrom(const CharacterCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wzbgame.message.lobby.CharacterCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterCreateResponse::CopyFrom(const CharacterCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wzbgame.message.lobby.CharacterCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterCreateResponse::IsInitialized() const {
  return true;
}

void CharacterCreateResponse::InternalSwap(CharacterCreateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterCreateResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_lobby_2eproto_getter, &descriptor_table_lobby_2eproto_once,
      file_level_metadata_lobby_2eproto[1]);
}

// ===================================================================

class CharacterDeleteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CharacterDeleteRequest>()._has_bits_);
  static void set_has_character_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CharacterDeleteRequest::CharacterDeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wzbgame.message.lobby.CharacterDeleteRequest)
}
CharacterDeleteRequest::CharacterDeleteRequest(const CharacterDeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_character_id()) {
    character_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:wzbgame.message.lobby.CharacterDeleteRequest)
}

inline void CharacterDeleteRequest::SharedCtor() {
character_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CharacterDeleteRequest::~CharacterDeleteRequest() {
  // @@protoc_insertion_point(destructor:wzbgame.message.lobby.CharacterDeleteRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CharacterDeleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  character_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CharacterDeleteRequest::ArenaDtor(void* object) {
  CharacterDeleteRequest* _this = reinterpret_cast< CharacterDeleteRequest* >(object);
  (void)_this;
}
void CharacterDeleteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CharacterDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:wzbgame.message.lobby.CharacterDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    character_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterDeleteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterDeleteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wzbgame.message.lobby.CharacterDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional bytes character_id = 1;
  if (_internal_has_character_id()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_character_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wzbgame.message.lobby.CharacterDeleteRequest)
  return target;
}

size_t CharacterDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wzbgame.message.lobby.CharacterDeleteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes character_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_character_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterDeleteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CharacterDeleteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterDeleteRequest::GetClassData() const { return &_class_data_; }

void CharacterDeleteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CharacterDeleteRequest *>(to)->MergeFrom(
      static_cast<const CharacterDeleteRequest &>(from));
}


void CharacterDeleteRequest::MergeFrom(const CharacterDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wzbgame.message.lobby.CharacterDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_character_id()) {
    _internal_set_character_id(from._internal_character_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterDeleteRequest::CopyFrom(const CharacterDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wzbgame.message.lobby.CharacterDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterDeleteRequest::IsInitialized() const {
  return true;
}

void CharacterDeleteRequest::InternalSwap(CharacterDeleteRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &character_id_, GetArenaForAllocation(),
      &other->character_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterDeleteRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_lobby_2eproto_getter, &descriptor_table_lobby_2eproto_once,
      file_level_metadata_lobby_2eproto[2]);
}

// ===================================================================

class CharacterDeleteResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CharacterDeleteResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CharacterDeleteResponse::CharacterDeleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wzbgame.message.lobby.CharacterDeleteResponse)
}
CharacterDeleteResponse::CharacterDeleteResponse(const CharacterDeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:wzbgame.message.lobby.CharacterDeleteResponse)
}

inline void CharacterDeleteResponse::SharedCtor() {
result_ = 0;
}

CharacterDeleteResponse::~CharacterDeleteResponse() {
  // @@protoc_insertion_point(destructor:wzbgame.message.lobby.CharacterDeleteResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CharacterDeleteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CharacterDeleteResponse::ArenaDtor(void* object) {
  CharacterDeleteResponse* _this = reinterpret_cast< CharacterDeleteResponse* >(object);
  (void)_this;
}
void CharacterDeleteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CharacterDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:wzbgame.message.lobby.CharacterDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterDeleteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterDeleteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wzbgame.message.lobby.CharacterDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 Result = 1;
  if (_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wzbgame.message.lobby.CharacterDeleteResponse)
  return target;
}

size_t CharacterDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wzbgame.message.lobby.CharacterDeleteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 Result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterDeleteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CharacterDeleteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterDeleteResponse::GetClassData() const { return &_class_data_; }

void CharacterDeleteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CharacterDeleteResponse *>(to)->MergeFrom(
      static_cast<const CharacterDeleteResponse &>(from));
}


void CharacterDeleteResponse::MergeFrom(const CharacterDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wzbgame.message.lobby.CharacterDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterDeleteResponse::CopyFrom(const CharacterDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wzbgame.message.lobby.CharacterDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterDeleteResponse::IsInitialized() const {
  return true;
}

void CharacterDeleteResponse::InternalSwap(CharacterDeleteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterDeleteResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_lobby_2eproto_getter, &descriptor_table_lobby_2eproto_once,
      file_level_metadata_lobby_2eproto[3]);
}

// ===================================================================

class CharacterSelectRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CharacterSelectRequest>()._has_bits_);
  static void set_has_character_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CharacterSelectRequest::CharacterSelectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wzbgame.message.lobby.CharacterSelectRequest)
}
CharacterSelectRequest::CharacterSelectRequest(const CharacterSelectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_character_id()) {
    character_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:wzbgame.message.lobby.CharacterSelectRequest)
}

inline void CharacterSelectRequest::SharedCtor() {
character_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CharacterSelectRequest::~CharacterSelectRequest() {
  // @@protoc_insertion_point(destructor:wzbgame.message.lobby.CharacterSelectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CharacterSelectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  character_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CharacterSelectRequest::ArenaDtor(void* object) {
  CharacterSelectRequest* _this = reinterpret_cast< CharacterSelectRequest* >(object);
  (void)_this;
}
void CharacterSelectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterSelectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CharacterSelectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:wzbgame.message.lobby.CharacterSelectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    character_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterSelectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes character_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterSelectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wzbgame.message.lobby.CharacterSelectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional bytes character_id = 1;
  if (_internal_has_character_id()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_character_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wzbgame.message.lobby.CharacterSelectRequest)
  return target;
}

size_t CharacterSelectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wzbgame.message.lobby.CharacterSelectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes character_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_character_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterSelectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CharacterSelectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterSelectRequest::GetClassData() const { return &_class_data_; }

void CharacterSelectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CharacterSelectRequest *>(to)->MergeFrom(
      static_cast<const CharacterSelectRequest &>(from));
}


void CharacterSelectRequest::MergeFrom(const CharacterSelectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wzbgame.message.lobby.CharacterSelectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_character_id()) {
    _internal_set_character_id(from._internal_character_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterSelectRequest::CopyFrom(const CharacterSelectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wzbgame.message.lobby.CharacterSelectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterSelectRequest::IsInitialized() const {
  return true;
}

void CharacterSelectRequest::InternalSwap(CharacterSelectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &character_id_, GetArenaForAllocation(),
      &other->character_id_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterSelectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_lobby_2eproto_getter, &descriptor_table_lobby_2eproto_once,
      file_level_metadata_lobby_2eproto[4]);
}

// ===================================================================

class CharacterSelectResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CharacterSelectResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CharacterSelectResponse::CharacterSelectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:wzbgame.message.lobby.CharacterSelectResponse)
}
CharacterSelectResponse::CharacterSelectResponse(const CharacterSelectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:wzbgame.message.lobby.CharacterSelectResponse)
}

inline void CharacterSelectResponse::SharedCtor() {
result_ = 0;
}

CharacterSelectResponse::~CharacterSelectResponse() {
  // @@protoc_insertion_point(destructor:wzbgame.message.lobby.CharacterSelectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CharacterSelectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CharacterSelectResponse::ArenaDtor(void* object) {
  CharacterSelectResponse* _this = reinterpret_cast< CharacterSelectResponse* >(object);
  (void)_this;
}
void CharacterSelectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterSelectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CharacterSelectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:wzbgame.message.lobby.CharacterSelectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterSelectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_result(&has_bits);
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterSelectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:wzbgame.message.lobby.CharacterSelectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional int32 Result = 1;
  if (_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wzbgame.message.lobby.CharacterSelectResponse)
  return target;
}

size_t CharacterSelectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wzbgame.message.lobby.CharacterSelectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 Result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterSelectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CharacterSelectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterSelectResponse::GetClassData() const { return &_class_data_; }

void CharacterSelectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<CharacterSelectResponse *>(to)->MergeFrom(
      static_cast<const CharacterSelectResponse &>(from));
}


void CharacterSelectResponse::MergeFrom(const CharacterSelectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wzbgame.message.lobby.CharacterSelectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterSelectResponse::CopyFrom(const CharacterSelectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wzbgame.message.lobby.CharacterSelectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterSelectResponse::IsInitialized() const {
  return true;
}

void CharacterSelectResponse::InternalSwap(CharacterSelectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterSelectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_lobby_2eproto_getter, &descriptor_table_lobby_2eproto_once,
      file_level_metadata_lobby_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace lobby
}  // namespace message
}  // namespace wzbgame
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::wzbgame::message::lobby::CharacterCreateRequest* Arena::CreateMaybeMessage< ::wzbgame::message::lobby::CharacterCreateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wzbgame::message::lobby::CharacterCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::wzbgame::message::lobby::CharacterCreateResponse* Arena::CreateMaybeMessage< ::wzbgame::message::lobby::CharacterCreateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wzbgame::message::lobby::CharacterCreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::wzbgame::message::lobby::CharacterDeleteRequest* Arena::CreateMaybeMessage< ::wzbgame::message::lobby::CharacterDeleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wzbgame::message::lobby::CharacterDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::wzbgame::message::lobby::CharacterDeleteResponse* Arena::CreateMaybeMessage< ::wzbgame::message::lobby::CharacterDeleteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wzbgame::message::lobby::CharacterDeleteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::wzbgame::message::lobby::CharacterSelectRequest* Arena::CreateMaybeMessage< ::wzbgame::message::lobby::CharacterSelectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wzbgame::message::lobby::CharacterSelectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::wzbgame::message::lobby::CharacterSelectResponse* Arena::CreateMaybeMessage< ::wzbgame::message::lobby::CharacterSelectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::wzbgame::message::lobby::CharacterSelectResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
